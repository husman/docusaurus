(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{119:function(e,n,t){"use strict";t.d(n,"a",function(){return o}),t.d(n,"b",function(){return u});var a=t(0),s=t.n(a),i=s.a.createContext({}),r=function(e){var n=s.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},o=function(e){var n=r(e.components);return s.a.createElement(i.Provider,{value:n},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){return s.a.createElement(s.a.Fragment,{},e.children)}},p=function(e){var n=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,o=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),l=r(n);return s.a.createElement(l[i+"."+t]||l[t]||c[t]||a,n?Object.assign({},o,{components:n}):o)};function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=p;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[l]="string"==typeof e?e:a,r[1]=o;for(var u=2;u<i;u++)r[u]=t[u];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},95:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return r}),t.d(n,"rightToc",function(){return o}),t.d(n,"default",function(){return p});t(0);var a=t(119);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var r={id:"styling-layout",title:"Styling and Layout",description:"A Docusaurus site is a pre-rendered single-page React application. You can style it the way you style React apps."},o=[{value:"Traditional CSS",id:"traditional-css",children:[]},{value:"Styling your site with Infima",id:"styling-your-site-with-infima",children:[]},{value:"Styling approaches",id:"styling-approaches",children:[{value:"Global styles",id:"global-styles",children:[]},{value:"CSS Modules",id:"css-modules",children:[]},{value:"CSS-in-JS",id:"css-in-js",children:[]}]}],l={rightToc:o},c="wrapper";function p(e){var n=e.components,t=i(e,["components"]);return Object(a.b)(c,s({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"traditional-css"},"Traditional CSS"),Object(a.b)("p",null,"If you're using ",Object(a.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic"),", you can create your own CSS files (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"/src/css/custom.css"),") and import them globally by passing it as an option into the preset."),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-diff"}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n+       theme: {\n+         customCss: require.resolve('./src/css/custom.css'),\n+       },\n      },\n    ],\n  ],\n};\n")),Object(a.b)("p",null,"Any CSS you write within that file will be available globally and can be referenced directly using string literals. This is the most traditional approach to writing CSS and is fine for small websites that do not have much customization."),Object(a.b)("h2",{id:"styling-your-site-with-infima"},"Styling your site with Infima"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic")," uses ",Object(a.b)("a",s({parentName:"p"},{href:"https://infima-dev.netlify.com/"}),"Infima")," as the underlying styling framework. Infima provides flexible layout and common UI components styling suitable for content-centric websites (blogs, documentation, landing pages). For more details, check out the ",Object(a.b)("a",s({parentName:"p"},{href:"https://infima-dev.netlify.com/"}),"Infima website"),"."),Object(a.b)("p",null,"When you ",Object(a.b)("inlineCode",{parentName:"p"},"init")," your Docusaurus 2 project, the website will be generated with basic Infima stylesheets and default styling. You may customize the styling by editing the ",Object(a.b)("inlineCode",{parentName:"p"},"src/css/custom.css")," file."),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-css"}),"/**\n * /src/css/custom.css\n * You can override the default Infima variables here.\n * Note: this is not a complete list of --ifm- variables.\n */\n:root {\n  --ifm-color-primary: #25c2a0;\n  --ifm-color-primary-dark: rgb(33, 175, 144);\n  --ifm-color-primary-darker: rgb(31, 165, 136);\n  --ifm-color-primary-darkest: rgb(26, 136, 112);\n  --ifm-color-primary-light: rgb(70, 203, 174);\n  --ifm-color-primary-lighter: rgb(102, 212, 189);\n  --ifm-color-primary-lightest: rgb(146, 224, 208);\n}\n")),Object(a.b)("p",null,"In future, we will provide an easier way to generate the different shades of colors."),Object(a.b)("h2",{id:"styling-approaches"},"Styling approaches"),Object(a.b)("p",null,"A Docusaurus site is a single-page React application. You can style it the way you style React apps."),Object(a.b)("p",null,"There are a few approaches/frameworks which will work, depending on your preferences and the type of website you are trying to build. Websites that are highly interactive and behave more like web apps will benefit from a more modern styling approaches that co-locate styles with the components. Component styling can also be particularly useful when you wish to customize or swizzle a component."),Object(a.b)("h3",{id:"global-styles"},"Global styles"),Object(a.b)("p",null,"This is the most traditional way of styling that most developers (including non-front end developers) would be familiar with."),Object(a.b)("p",null,"Assuming you are using ",Object(a.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic")," and ",Object(a.b)("inlineCode",{parentName:"p"},"/src/css/custom.css")," was passed in to the preset config, styles inside that file would be available globally."),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-css"}),"/* /src/css/custom.css */\n.purple-text {\n  color: rebeccapurple;\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-jsx"}),'function MyComponent() {\n  return (\n    <main>\n      <h1 className="purple-text">Purple Heading!</h1>\n    </main>\n  );\n}\n')),Object(a.b)("h3",{id:"css-modules"},"CSS Modules"),Object(a.b)("p",null,"To style your components using ",Object(a.b)("a",s({parentName:"p"},{href:"https://github.com/css-modules/css-modules"}),"CSS Modules"),", name your stylesheet files with the ",Object(a.b)("inlineCode",{parentName:"p"},".module.css")," suffix (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"welcome.module.css"),"). webpack will load such CSS files as CSS modules and you have to reference the class names from the imported CSS module (as opposed to using plain strings). This is similar to the convention used in ",Object(a.b)("a",s({parentName:"p"},{href:"https://facebook.github.io/create-react-app/docs/adding-a-css-modules-stylesheet"}),"Create React App"),"."),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-css"}),"/* styles.module.css */\n.main {\n  padding: 12px;\n}\n\n.heading {\n  font-weight: bold;\n}\n\n.contents {\n  color: #ccc;\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",s({parentName:"pre"},{className:"language-jsx"}),"import styles from './styles.module.css';\n\nfunction MyComponent() {\n  return (\n    <main className={styles.main}>\n      <h1 className={styles.heading}>Hello!</h1>\n      <article className={styles.contents}>Lorem Ipsum</article>\n    </main>\n  );\n}\n")),Object(a.b)("p",null,"The class names which will be processed by webpack into a globally unique class name during build."),Object(a.b)("h3",{id:"css-in-js"},"CSS-in-JS"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"This section is a work in progress. ",Object(a.b)("a",s({parentName:"em"},{href:"https://github.com/facebook/docusaurus/issues/1640"}),"Welcoming PRs"),".")))}p.isMDXComponent=!0}}]);